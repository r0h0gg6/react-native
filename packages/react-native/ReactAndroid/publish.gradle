apply plugin: 'maven-publish'
apply plugin: 'signing'

def sonatypeUsername = getRepositoryUsername()
def sonatypePassword = getRepositoryPassword()

def getRepositoryUsername() {
    return project.findProperty("repositoryUsername") ?: ""
}

def getRepositoryPassword() {
    return project.findProperty("repositoryPassword") ?: ""
}

def isReleaseBuild() {
    return VERSION_NAME.contains("SNAPSHOT") == false
}

// Gradle tasks for publishing to maven
// ./gradlew assembleRelease
// ./gradlew publish
// Use Release-AAR github workflow to publish RN to MVN Central.

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                afterEvaluate {
                    groupId = GROUP
                    artifactId = POM_ARTIFACT_ID
                    version = VERSION_NAME
                    from components.release
                }

                pom {
                    name = "react-native"
                    description = "A framework for building native apps with React"
                    url = "https://github.com/facebook/react-native"

                    developers {
                        developer {
                            id = "facebook"
                            name = "Facebook"
                        }
                    }

                    licenses {
                        license {
                            name = "MIT License"
                            url = "https://github.com/facebook/react-native/blob/HEAD/LICENSE"
                            distribution = "repo"
                        }
                    }

                    scm {
                        url = "https://github.com/facebook/react-native.git"
                        connection = "scm:git:https://github.com/facebook/react-native.git"
                        developerConnection = "scm:git:git@github.com:facebook/react-native.git"
                    }
                }
            }
        }

        repositories {
            if (sonatypeUsername && sonatypePassword) {
                maven {
                    name = "mavenCentral"
                    url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                    credentials {
                        username = sonatypeUsername
                        password = sonatypePassword
                    }
                }
            }
        }

        signing {
            required { isReleaseBuild() }
            useGpgCmd()
            sign(publishing.publications.release)
        }
    }
}